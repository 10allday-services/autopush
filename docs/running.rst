.. _running:

================
Running Autopush
================

After installation of autopush the following command line utilities are
available in the ``bin/`` directory:

=======================    ===========
``autopush``               Runs a Connection Node
``autoendpoint``           Runs an Endpoint Node
``endpoint_diagnostic``    Runs Endpoint diagnostics
``autokey``                Endpoint encryption key generator
=======================    ===========

You will need to have a `boto config file`_ file or ``AWS`` environment keys
setup before the first 3 utilities will run properly.

Using a Local DynamoDB Server
=============================

Amazon supplies a `Local DynamoDB Java server`_ to use for local testing that
implements the complete DynamoDB API. This is used for automated unit testing
on Travis and can be used to run autopush locally for testing.

You will need the Java JDK 6.x or newer.

To setup the server locally:

.. code-block:: bash

    $ mkdir ddb
    $ curl -sSL http://dynamodb-local.s3-website-us-west-2.amazonaws.com/dynamodb_local_latest.tar.gz | tar xzvC ddb/
    $ java -Djava.library.path=./ddb/DynamoDBLocal_lib -jar ./ddb/DynamoDBLocal.jar -sharedDb -inMemory

An example `boto config file`_ is provided in ``automock/boto.cfg`` that
directs autopush to your local DynamoDB instance.

Configuring the Nodes
=====================

Besides DynamoDB, at a bare minimum, autopush requires configuration of a token
encryption key generated by the ``autokey`` program. This key should be shared
by Connection and Endpoint nodes in the same cluster.

To generate and configure a key:

.. code-block:: bash

    $ bin/autokey
    Key = <crypto key here>
    $ cp configs/autopush_shared.ini.sample ./autopush_shared.ini

Then edit your ``autopush_shared.ini`` to include it:

.. code-block:: ini

    crypto_key = [<paste crypto key here>]

You may also want to enable human readable logs in the shared config file:

.. code-block:: ini

    ; Uncomment to provide stdout logging in a more human readable format.
    #human_logs

Configuring SSL/TLS
-------------------

The Push protocol mandates use of SSL/TLS connections to ensure the integrity
of push subscription data. This rule can be ignored for testing purposes
only. This requires a valid, trusted TLS certificate (for example, from `Let's
Encrypt`_).

The ``ssl_key`` and ``ssl_cert`` options configure a TLS certificate for
endpoint's HTTPS and or connection node's WebSocket Secure (WSS) connections:

.. code-block:: ini

    ; TLS private key and certificate file paths, used for the main
    ; connection and endpoint listeners. If omitted, TLS will not be
    ; used.
    ssl_key = /etc/letsencrypt/live/EXAMPLE.COM/privkey.pem
    ssl_cert = /etc/letsencrypt/live/EXAMPLE.COM/cert.pem
    ; Path to file containing any additional parameters for the Ephemeral
    ; Diffie-Hellman
    #ssl_dh_param =

Certificate options can be easily shared by both node types in
``autopush_shared.ini`` (e.g. if you have a wildcard certificate). Separate
credentials can also be specified individually to each node types.

The connection between the endpoint and connection nodes should not be
accessible externally but can also have SSL/TLS enabled for added
protection. This can be configured via the connection node's ``router_ssl_key``
and ``router_ssl_key`` options:

.. code-block:: ini

    ; The TLS certificates if this node will be doing SSL termination.
    router_ssl_key = /etc/letsencrypt/live/EXAMPLE.COM/privkey.pem
    router_ssl_cert = /etc/letsencrypt/live/EXAMPLE.COM/cert.pem

Running the nodes
=================

.. code-block:: bash

    $ BOTO_CONFIG=automock/boto.cfg bin/autopush --config-shared=./autopush_shared.ini
    $ BOTO_CONFIG=automock/boto.cfg bin/autoendpoint --config-shared=./autopush_shared.ini

By default they will create a router and storage DynamoDB table named
``storage`` and ``router`` with provisioned throughputs of ``5``.

.. _`Local DynamoDB Java server`: http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Tools.DynamoDBLocal.html
.. _`boto config file`: https://boto.readthedocs.io/en/latest/boto_config_tut.html
.. _`Let's Encrypt`: https://letsencrypt.org/
